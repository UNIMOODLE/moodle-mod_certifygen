{"version":3,"file":"activitymanager.min.js","sources":["../src/activitymanager.js"],"sourcesContent":["/**\n * @module    mod_certifygen\n * @copyright  2024 Proyecto UNIMOODLE\n * @author     UNIMOODLE Group (Coordinator) <direccion.area.estrategia.digital@uva.es>\n * @author     3IPUNT <contacte@tresipunt.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\"use strict\";\n\nimport jQuery from 'jquery';\nimport {get_strings as getStrings} from 'core/str';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\n\nlet TEMPLATES = {\n    LOADING: 'core/overlay_loading',\n    ACTIVITY_TABLE: 'mod_certifygen/activity',\n};\nlet ACTION = {\n    EMIT_CERTIFICATE: '[data-action=\"emit-certificate\"]',\n    REVOKE_CERTIFICATE: '[data-action=\"revoke-certificate\"]',\n    DOWNLOAD_CERTIFICATE: '[data-action=\"download-certificate\"]',\n};\nlet SERVICES = {\n    EMIT_CERTIFICATE: 'mod_certifygen_emitcertificate',\n    GET_MYCERTIFICATE_TABLE_DATA: 'mod_certifygen_getmycertificatedata',\n    REVOKE_CERTIFICATE: 'mod_certifygen_revokecertificate',\n    DOWNLOAD_CERTIFICATE: 'mod_certifygen_downloadcertificate',\n};\nconst certificateManagement = () => {\n    jQuery(ACTION.EMIT_CERTIFICATE).on('click', emitCertificate);\n    jQuery(ACTION.REVOKE_CERTIFICATE).on('click', revokeCertificate);\n    jQuery(ACTION.DOWNLOAD_CERTIFICATE).on('click', downloadCertificate);\n};\n\nconst downloadCertificate = async(event) => {\n    let modelid = parseInt(event.currentTarget.getAttribute('data-modelid'));\n    let code = event.currentTarget.getAttribute('data-code');\n    let langstring = event.currentTarget.getAttribute('data-langstring');\n    let id = parseInt(event.currentTarget.getAttribute('data-id'));\n    let instanceid = parseInt(event.currentTarget.getAttribute('data-instanceid'));\n    let courseid = parseInt(event.currentTarget.getAttribute('data-courseid'));\n\n    // Modal estas seguro que quieres enviar el certiifcado?.\n    const stringkeys = [\n        {key: 'downloadcertificate_title', component: 'mod_certifygen'},\n        {key: 'downloadcertificate_body', component: 'mod_certifygen', param: langstring},\n        {key: 'confirm', component: 'mod_certifygen'},\n        {key: 'downloadcertificate_error', component: 'mod_certifygen'}\n    ];\n    let langStrings = await getStrings(stringkeys);\n\n    let modal = await ModalFactory.create({\n        title: langStrings[0],\n        body: langStrings[1],\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n    modal.setSaveButtonText(langStrings[2]);\n    modal.getRoot().on(ModalEvents.save, () => {\n        let request = {\n            methodname: SERVICES.DOWNLOAD_CERTIFICATE,\n            args: {\n                id,\n                instanceid,\n                modelid,\n                code,\n                courseid,\n            }\n        };\n        modal.destroy();\n        Ajax.call([request])[0].done(function(response) {\n            if (response.result === true) {\n                jQuery(event.currentTarget).parent().parent().find(\".code\").html(response.codetag);\n                window.open(response.url, \"_blank\");\n            } else {\n                Notification.alert('Error', response.message, langStrings[2]);\n            }\n        }).fail(Notification.exception);\n    });\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n    modal.show();\n};\nconst revokeCertificate = async(event) => {\n    let issueid = event.currentTarget.getAttribute('data-issueid');\n    let cmid = event.currentTarget.getAttribute('data-cmid');\n    let userid = event.currentTarget.getAttribute('data-userid');\n    let modelid = event.currentTarget.getAttribute('data-modelid');\n    let courseid = event.currentTarget.getAttribute('data-courseid');\n    let username = event.currentTarget.getAttribute('data-username');\n    let lang = event.currentTarget.getAttribute('data-lang');\n    // Modal estas seguro que quieres eliminar el certiifcado?.\n    const stringkeys = [\n        {key: 'revokecertificate_title', component: 'mod_certifygen'},\n        {key: 'revokecertificate_body', component: 'mod_certifygen', param: username},\n        {key: 'confirm', component: 'mod_certifygen'},\n        {key: 'revokecertificate_error', component: 'mod_certifygen'}\n    ];\n    let langStrings = await getStrings(stringkeys);\n\n    let modal = await ModalFactory.create({\n        title: langStrings[0],\n        body: langStrings[1],\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n    modal.setSaveButtonText(langStrings[2]);\n    modal.getRoot().on(ModalEvents.save, () => {\n        let request = {\n            methodname: SERVICES.REVOKE_CERTIFICATE,\n            args: {\n                issueid,\n                userid,\n                modelid,\n            }\n        };\n        modal.destroy();\n        Ajax.call([request])[0].done(function(response) {\n            if (response.result === true) {\n                studentsReloadTable(modelid, courseid, cmid, lang);\n            } else {\n                Notification.alert('Error', response.message, langStrings[2]);\n            }\n        }).fail(Notification.exception);\n    });\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n    modal.show();\n};\nconst emitCertificate = async(event) => {\n    let id = parseInt(event.currentTarget.getAttribute('data-id'));\n    let modelid = parseInt(event.currentTarget.getAttribute('data-modelid'));\n    let lang = event.currentTarget.getAttribute('data-lang');\n    let langstring = event.currentTarget.getAttribute('data-langstring');\n    let userid = parseInt(event.currentTarget.getAttribute('data-userid'));\n    let courseid = parseInt(event.currentTarget.getAttribute('data-courseid'));\n    let cmid = parseInt(event.currentTarget.getAttribute('data-cmid'));\n    let instanceid = parseInt(event.currentTarget.getAttribute('data-instanceid'));\n\n    // Modal estas seguro que quieres enviar el certiifcado?.\n    const stringkeys = [\n        {key: 'emitcertificate_title', component: 'mod_certifygen'},\n        {key: 'emitcertificate_body', component: 'mod_certifygen', param: langstring},\n        {key: 'confirm', component: 'mod_certifygen'},\n        {key: 'emitcertificate_error', component: 'mod_certifygen'}\n    ];\n    Templates.render(TEMPLATES.LOADING, {visible: true}).done(async function(html) {\n        let identifier = jQuery('[data-region=\"activity-view\"]');\n        identifier.append(html);\n        let langStrings = await getStrings(stringkeys);\n        let modal = await ModalFactory.create({\n            title: langStrings[0],\n            body: langStrings[1],\n            type: ModalFactory.types.SAVE_CANCEL\n        });\n        modal.setSaveButtonText(langStrings[2]);\n        modal.getRoot().on(ModalEvents.save, () => {\n            let request = {\n                methodname: SERVICES.EMIT_CERTIFICATE,\n                args: {\n                    id,\n                    instanceid,\n                    modelid,\n                    lang,\n                    userid,\n                    courseid,\n                }\n            };\n            Ajax.call([request])[0].done(function(response) {\n                modal.destroy();\n                if (response.result === true) {\n                    studentsReloadTable(modelid, courseid, cmid, lang);\n                } else {\n                    Notification.alert('Error', response.message, langStrings[2]);\n                }\n                identifier.find('.overlay-icon-container').remove();\n            }).fail(Notification.exception);\n        });\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n        modal.getRoot().on(ModalEvents.cancel, () => {\n            identifier.find('.overlay-icon-container').remove();\n        });\n        modal.show();\n    });\n};\nconst studentsReloadTable = (modelid, courseid, cmid, lang) => {\n    modelid = parseInt(modelid);\n    courseid = parseInt(courseid);\n    cmid = parseInt(cmid);\n    Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n        let identifier = jQuery('[data-region=\"activity-view\"]');\n        identifier.append(html);\n        let request = {\n            methodname: SERVICES.GET_MYCERTIFICATE_TABLE_DATA,\n            args: {modelid, courseid, cmid, lang}\n        };\n        Ajax.call([request])[0].done(function(data) {\n            Templates.render(TEMPLATES.ACTIVITY_TABLE, data).then(function(html, js) {\n                identifier.replaceWith(html);\n                Templates.runTemplateJS(js);\n            }).fail(Notification.exception);\n        }).fail((error) => {\n            identifier.find('.overlay-icon-container').remove();\n            Notification.alert('Error', error.message, 'cancel');\n        });\n    });\n};\nexport const init = () => {\n    certificateManagement();\n};"],"names":["TEMPLATES","ACTION","SERVICES","downloadCertificate","async","modelid","parseInt","event","currentTarget","getAttribute","code","langstring","id","instanceid","courseid","stringkeys","key","component","param","langStrings","modal","ModalFactory","create","title","body","type","types","SAVE_CANCEL","setSaveButtonText","getRoot","on","ModalEvents","save","request","methodname","args","destroy","call","done","response","result","parent","find","html","codetag","window","open","url","alert","message","fail","Notification","exception","hidden","show","revokeCertificate","issueid","cmid","userid","username","lang","studentsReloadTable","emitCertificate","render","visible","identifier","append","remove","cancel","data","then","js","replaceWith","runTemplateJS","error"],"mappings":"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"}